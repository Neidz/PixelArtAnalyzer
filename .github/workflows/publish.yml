name: publish

on:
    push:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Set up .Net Core
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "7.0"

            - name: Restore Dependencies
              run: dotnet restore src/PixelArtAnalyzer.csproj

            # Build for Linux
            - name: Build Linux Deployment
              run: dotnet publish src/PixelArtAnalyzer.csproj --configuration Release --output ./publish/linux-x64 --no-restore -r linux-x64

            # Build for macOS
            - name: Build macOS Deployment
              run: dotnet publish src/PixelArtAnalyzer.csproj --configuration Release --output ./publish/osx-x64 --no-restore -r osx-x64

            # Build for Windows
            - name: Build Windows Deployment
              run: dotnet publish src/PixelArtAnalyzer.csproj --configuration Release --output ./publish/win-x64 --no-restore -r win-x64

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v1.0.0
                  release_name: Release 1.0.0
                  draft: false
                  prerelease: false

            # Upload Linux Release Asset
            - name: Upload Linux Asset
              id: upload_linux
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./publish/linux-x64/PixelArtAnalyzer
                  asset_name: PixelArtAnalyzer-linux-x64
                  asset_content_type: application/octet-stream

            # Upload macOS Release Asset
            - name: Upload macOS Asset
              id: upload_macos
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./publish/osx-x64/PixelArtAnalyzer
                  asset_name: PixelArtAnalyzer-osx-x64
                  asset_content_type: application/octet-stream

            # Upload Windows Release Asset
            - name: Upload Windows Asset
              id: upload_windows
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./publish/win-x64/PixelArtAnalyzer.exe
                  asset_name: PixelArtAnalyzer-win-x64.exe
                  asset_content_type: application/octet-stream
